package resourcesSchemas

import (
	"service-scim/models/config"
)

var GroupSchemaObject = modelsConfig.Schema{
	Id:          "urn:ietf:params:scim:schemas:core:2.0:Group",
	Name:        "Group",
	Description: "Group Schema",
	Attributes: []*modelsConfig.Attribute{
		{
			Name:            "schemas",
			Type:            "reference",
			MultiValued:     true,
			Required:        true,
			CaseExact:       &True,
			Mutability:      "readOnly",
			Returned:        "default",
			Uniqueness:      "none",
			ReferenceTypes:  []string{"uri"},
			CanonicalValues: []string{"urn:ietf:params:scim:schemas:core:2.0:Group"},
			Description:     "An array of Strings containing URIs that are used to indicate the namespaces of the SCIM schemas that define the attributes present in the current structure.",
			Navigation: &modelsConfig.AttributeNavigation{
				FieldName: "Schemas",
				Path:      "schemas",
				FullPath:  "schemas",
				IndexKeys: []string{},
			},
		}, {
			Name:        "id",
			Type:        "integer",
			MultiValued: false,
			Required:    true,
			CaseExact:   &True,
			Mutability:  "readOnly",
			Returned:    "always",
			Uniqueness:  "global",
			Description: "A unique identifier for a SCIM resource as defined by the service provider.",
			Navigation: &modelsConfig.AttributeNavigation{
				FieldName: "Id",
				Path:      "id",
				FullPath:  "id",
				IndexKeys: []string{},
			},
		}, {
			Name:        "externalId",
			Type:        "string",
			MultiValued: false,
			Required:    false,
			CaseExact:   &True,
			Mutability:  "readWrite",
			Returned:    "default",
			Uniqueness:  "global",
			Description: "A String that is an identifier for the resource as defined by the provisioning client.",
			Navigation: &modelsConfig.AttributeNavigation{
				FieldName: "ExternalId",
				Path:      "externalId",
				FullPath:  "externalId",
				IndexKeys: []string{},
			},
		}, {
			Name:        "displayName",
			Type:        "string",
			MultiValued: false,
			Required:    true,
			CaseExact:   &False,
			Mutability:  "readWrite",
			Returned:    "default",
			Uniqueness:  "server",
			Description: "A human-readable name for the Group.",
			Navigation: &modelsConfig.AttributeNavigation{
				FieldName: "DisplayName",
				Path:      "displayName",
				FullPath:  "urn:ietf:params:scim:schemas:core:2.0:Group:displayName",
				IndexKeys: []string{},
			},
		}, {
			Name:        "members",
			Type:        "complex",
			MultiValued: true,
			Required:    false,
			Mutability:  "readWrite",
			Returned:    "default",
			Uniqueness:  "none",
			Description: "A list of members of the Group.",
			SubAttributes: []*modelsConfig.Attribute{
				{
					Name:        "value",
					Type:        "string",
					MultiValued: false,
					Required:    false,
					CaseExact:   &False,
					Mutability:  "readWrite",
					Returned:    "default",
					Uniqueness:  "none",
					Description: "Identifier of the member of this Group.",
					Navigation: &modelsConfig.AttributeNavigation{
						FieldName: "Value",
						Path:      "members.value",
						FullPath:  "urn:ietf:params:scim:schemas:core:2.0:Group:members.value",
						IndexKeys: []string{},
					},
				}, {
					Name:           "$ref",
					Type:           "reference",
					MultiValued:    false,
					Required:       false,
					CaseExact:      &False,
					Mutability:     "readOnly",
					Returned:       "default",
					Uniqueness:     "none",
					ReferenceTypes: []string{"User"},
					Description:    "The URI corresponding to a SCIM user that is a member of this Group.",
					Navigation: &modelsConfig.AttributeNavigation{
						FieldName: "Ref",
						Path:      "members.$ref",
						FullPath:  "urn:ietf:params:scim:schemas:core:2.0:Group:members.$ref",
						IndexKeys: []string{},
					},
				}, {
					Name:        "display",
					Type:        "string",
					MultiValued: false,
					Required:    false,
					CaseExact:   &False,
					Mutability:  "readOnly",
					Returned:    "default",
					Uniqueness:  "none",
					Description: "A human-readable name for the group member.",
					Navigation: &modelsConfig.AttributeNavigation{
						FieldName: "Display",
						Path:      "display",
						FullPath:  "display",
						IndexKeys: []string{},
					},
				}, {
					Name:            "type",
					Type:            "string",
					MultiValued:     false,
					Required:        false,
					CaseExact:       &False,
					Mutability:      "immutable",
					Returned:        "default",
					Uniqueness:      "none",
					CanonicalValues: []string{"User"},
					Description:     "A label indicating the type of resource, e.g., 'User' or 'Group'.",
					Navigation: &modelsConfig.AttributeNavigation{
						FieldName: "Type",
						Path:      "members.type",
						FullPath:  "urn:ietf:params:scim:schemas:core:2.0:Group:members.type",
						IndexKeys: []string{},
					},
				}, {
					Name:        "roles",
					Type:        "complex",
					MultiValued: true,
					Required:    false,
					Mutability:  "writeOnly",
					Returned:    "never",
					Uniqueness:  "none",
					Description: "A list of roles for the group member that collectively represent who the User is, e.g., 'Manager', 'Operator'.",
					SubAttributes: []*modelsConfig.Attribute{
						{
							Name:        "value",
							Type:        "string",
							MultiValued: false,
							Required:    false,
							CaseExact:   &False,
							Mutability:  "writeOnly",
							Returned:    "never",
							Uniqueness:  "none",
							Description: "The value of a role.",
							Navigation: &modelsConfig.AttributeNavigation{
								FieldName: "Value",
								Path:      "roles.value",
								FullPath:  "urn:ietf:params:scim:schemas:core:2.0:User:roles.value",
								IndexKeys: []string{},
							},
						},
					},
					Navigation: &modelsConfig.AttributeNavigation{
						FieldName: "Roles",
						Path:      "roles",
						FullPath:  "roles",
						IndexKeys: []string{},
					},
				},
			},
			Navigation: &modelsConfig.AttributeNavigation{
				FieldName: "Members",
				Path:      "members",
				FullPath:  "urn:ietf:params:scim:schemas:core:2.0:Group:members",
				IndexKeys: []string{"value"},
			},
		}, {
			Name:        "meta",
			Type:        "complex",
			MultiValued: false,
			Required:    false,
			Mutability:  "readOnly",
			Returned:    "default",
			Uniqueness:  "none",
			Description: "Resource metadata.",
			SubAttributes: []*modelsConfig.Attribute{
				{
					Name:        "resourceType",
					Type:        "string",
					MultiValued: false,
					Required:    false,
					CaseExact:   &True,
					Mutability:  "readOnly",
					Returned:    "default",
					Uniqueness:  "none",
					Description: "The name of the resource type of the resource.",
					Navigation: &modelsConfig.AttributeNavigation{
						FieldName: "ResourceType",
						Path:      "meta.resourceType",
						FullPath:  "meta.resourceType",
						IndexKeys: []string{},
					},
				}, {
					Name:        "lastModified",
					Type:        "datetime",
					MultiValued: false,
					Required:    false,
					CaseExact:   &True,
					Mutability:  "readOnly",
					Returned:    "default",
					Uniqueness:  "none",
					Description: "The 'DateTime' that the resource was updated last time.",
					Navigation: &modelsConfig.AttributeNavigation{
						FieldName: "LastModified",
						Path:      "meta.lastModified",
						FullPath:  "meta.lastModified",
						IndexKeys: []string{},
					},
				}, {
					Name:           "location",
					Type:           "reference",
					MultiValued:    false,
					Required:       false,
					CaseExact:      &True,
					Mutability:     "readOnly",
					Returned:       "default",
					Uniqueness:     "none",
					ReferenceTypes: []string{"uri"},
					Description:    "The URI of the resource being returned.",
					Navigation: &modelsConfig.AttributeNavigation{
						FieldName: "Location",
						Path:      "meta.location",
						FullPath:  "meta.location",
						IndexKeys: []string{},
					},
				},
			},
			Navigation: &modelsConfig.AttributeNavigation{
				FieldName: "Meta",
				Path:      "meta",
				FullPath:  "meta",
				IndexKeys: []string{},
			},
		},
	},
	Meta: &modelsConfig.SchemaMeta{
		Location:     "/Schemas/urn:ietf:params:scim:schemas:core:2.0:Group",
		ResourceType: "Schema",
	},
}
